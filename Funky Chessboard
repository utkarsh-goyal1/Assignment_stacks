import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int [][]A = new int [n][n];
        int count = 0;
        for(int i=0; i<n;i++)
        {
            for(int j=0; j<n;j++)
            {
                A[i][j] = sc.nextInt();
                if(A[i][j] == 1)
                {
                    count++;
                }
            }
        }
        boolean[][] is_present = new boolean[n][n];
        Funky_chessboard(A, 0,0,0,is_present);
        System.out.println(count - total);
    }
    static int total = 0;
    public static void Funky_chessboard(int[][]A, int cr, int cc, int count, boolean [][] is_present)
    {
        if(cr >= A.length || cc >= A[0].length || cr < 0 || cc < 0 || is_present[cr][cc] || A[cr][cc]==0)
        {
            total = Math.max(total,count);
            return;
        }
        is_present[cr][cc] = true;
        int []r={1,1,-1,-1,2,2,-2,-2};
        int []c={2,-2,2,-2,1,-1,1,-1};
        for(int i=0;i<r.length;i++)
        {
            Funky_chessboard(A, cr+r[i], cc+c[i], count+1, is_present);
        }
        is_present[cr][cc] = false;
    }

}
