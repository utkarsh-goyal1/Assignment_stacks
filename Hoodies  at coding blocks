import java.util.*;


public class Main {

    protected int size;

    protected int front;
    protected int[] data;

    public Main() {
        this.size = 0;
        this.front = 0;
        this.data = new int[5];
    }

    public Main(int cap) {
        this.size = 0;
        this.front = 0;
        this.data = new int[cap];
    }

    public int size() {
        return size;
    }

    public boolean isEmpty() {
        return (size == 0);
    }

    public void enqueue(int item) throws Exception {
        if (this.size() == this.data.length) {
            int[] oa = this.data;
            int[] na = new int[oa.length * 2];
            for (int i = 0; i < this.size(); i++) {
                int idx = (i + front) % oa.length;
                na[i] = oa[idx];
            }

            this.data = na;
            this.front = 0;
        }

        // if (this.size == this.data.length) {
        // throw new Exception("queue is full");
        // }

        this.data[(front + size) % this.data.length] = item;
        size++;

    }

    public int deque() throws Exception {
        if (this.size == 0) {
            throw new Exception("queue is empty");

        }

        int rv = this.data[front];
        front = (front + 1) % this.data.length;
        size--;

        return rv;

    }

    public int getFront() throws Exception {
        if (this.size == 0) {
            throw new Exception("queue is empty");
        }

        int rv = this.data[front];

        return rv;
    }

    public void display() {
        System.out.println();
        for (int i = 0; i < size; i++) {
            int idx = (i + front) % this.data.length;
            System.out.print(this.data[idx] + " ");
        }
        System.out.print("END");
    }
    public static void hoodies(Main q1,Main q2,Main q3,Main q4,Main order,int n) throws Exception
    { 
        boolean temp1=false;
        boolean temp2=false;
        boolean temp3=false;
        boolean temp4=false;
        for(int i=0;i<n;i++)
        {
            char ch=sc.next().charAt(0);
            if(ch=='E')
            {
                int x=sc.nextInt();
                int y=sc.nextInt();
                if(x==1)
                {
                    q1.enqueue(y);
                    if(temp1==false)
                    {
                        order.enqueue(x);
                        temp1=true;
                    }
                }
                if(x==2)
                {
                    q2.enqueue(y);
                    if(temp2==false)
                    {
                        order.enqueue(x);
                        temp2=true;
                    }
                }
                if(x==3)
                {
                    q3.enqueue(y);
                    if(temp3==false)
                    {
                        order.enqueue(x);
                        temp3=true;
                    }
                }
                else
                {
                    q4.enqueue(y);
                    if(temp4==false)
                    {
                        order.enqueue(x);
                        temp4=true;
                    }
                }
            }
            else
            {
                int front=order.getFront();
                if(front==1)
                {
                    if(q1.size()!=0)
                    {
                        System.out.println(order.getFront()+" "+q1.getFront());
                        q1.deque();
                    }
                    if(q1.size==0)
                    {
                        order.deque();
                        temp1=false;
                    }
                }
                else if(front==2)
                {
                    if(q2.size()!=0)
                    {
                        System.out.println(order.getFront()+" "+q2.getFront());
                        q2.deque();
                    }
                    if(q2.size==0)
                    {
                        order.deque();
                        temp2=false;
                    }
                }
                else if(front==3)
                {
                    if(q3.size()!=0)
                    {
                        System.out.println(order.getFront()+" "+q3.getFront());
                        q3.deque();
                    }
                    if(q3.size==0)
                    {
                        order.deque();
                        temp3=false;
                    }
                }
                else
                {
                    if(q4.size()!=0)
                    {
                        System.out.println(order.getFront()+" "+q4.getFront());
                        q4.deque();
                    }
                    if(q4.size==0)
                    {
                        order.deque();
                        temp4=false;
                    }
                }
            }
        }

        
    } 
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) throws Exception {
        Main q1 = new Main();
        Main q2 = new Main();
        Main q3 = new Main();
        Main q4 = new Main();
        Main order = new Main();
        int n = sc.nextInt();
        hoodies(q1,q2,q3,q4,order,n);
    }

}
